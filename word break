/// using Set
class Solution {
    
    public boolean wordBreak(String s, List<String> wordDict) {
        if(s==null || s.length()==0)
            return false;
        Set<String>set = new HashSet<>();
        for(String i:wordDict)
            set.add(i);
        boolean[] dp = new boolean[s.length()];
        for(int i=0;i<s.length();i++){
            for(int j=0;j<=i;j++){
                String temp = s.substring(j,i+1);
                if(set.contains(temp)){
                    if(j>0)
                        dp[i]=dp[j-1] || dp[i];
                    else
                        dp[i]=true;
                }
            }
        }
        return dp[s.length()-1];
    }
}

/////

class Solution {
	boolean wordBreak (String s, String[] w) {
	   int dp[]=new int[s.length()];
dp[0]=0;

    for(int i=0;i<s.length();i++)
    {
        for(int j=0;j<=i;j++)
        {
            if(w.contains(s.substring(j,i+1)))
            {
         //     System.out.print(j+"-"+i+" , ");
                if(j==0)
                {
                    dp[i]=1;
                }
                else if(dp[j-1]==1)
                {
                               dp[i]=1; 
                }
            }
        }
     //   System.out.println();
    }
    if(dp[s.length()-1]==1) return true;
    else return false;
	}
}
